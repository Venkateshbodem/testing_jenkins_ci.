<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="a3183d81-e07d-475c-8ef6-04ed60bf4053" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/2018.1/project-config.xsd">
  <name>AdHoc Performance Scenario - Linux</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="subprojects/*/build/test-results-*.zip =&gt; results&#xA;subprojects/*/build/tmp/**/log.txt =&gt; failure-logs" />
      <option name="checkoutMode" value="ON_AGENT" />
      <option name="executionTimeoutMin" value="420" />
    </options>
    <parameters>
      <param name="additional.gradle.parameters" value="" />
      <param name="baselines" value="defaults" spec="text display='prompt' validationMode='not_empty'" />
      <param name="channel" value="adhoc" />
      <param name="checks" value="all" />
      <param name="env.ANDROID_HOME" value="/opt/android/sdk" />
      <param name="env.FG_HOME_DIR" value="/opt/FlameGraph" />
      <param name="env.GRADLE_OPTS" value="-Xmx1536m -XX:MaxPermSize=384m" />
      <param name="env.HP_HOME_DIR" value="/opt/honest-profiler" />
      <param name="env.JAVA_HOME" value="/opt/jdk/oracle-jdk-8-latest" />
      <param name="flamegraphs" value="--flamegraphs true" />
      <param name="performance.db.url" value="jdbc:h2:ssl://dev61.gradle.org:9092" />
      <param name="performance.db.username" value="tcagent" />
      <param name="runs" value="10" spec="text display='prompt' validationMode='not_empty'" />
      <param name="scenario" value="" spec="text display='prompt' validationMode='not_empty'" />
      <param name="templates" value="" spec="text display='prompt' validationMode='not_empty'" />
      <param name="warmups" value="3" spec="text display='prompt' validationMode='not_empty'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_1" name="GRADLE_RUNNER" type="gradle-runner">
        <parameters>
          <param name="org.jfrog.artifactory.selectedDeployableServer.defaultModuleVersionConfiguration" value="GLOBAL" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui.gradleRunner.additional.gradle.cmd.params" value="clean %templates% performanceAdHocTest --scenarios &quot;%scenario%&quot; --baselines %baselines% --warmups %warmups% --runs %runs% --checks %checks% --channel %channel% %flamegraphs% -x prepareSamples -x performanceReport -PmaxParallelForks=%maxParallelForks% %additional.gradle.parameters% -Dorg.gradle.logging.level=LIFECYCLE -s --no-daemon --continue -I ./gradle/init-scripts/build-scan.init.gradle.kts -Djava9Home=%linux.java9.oracle.64bit% -Djava7Home=%linux.jdk.for.gradle.compile% --build-cache -Dgradle.cache.remote.url=%gradle.cache.remote.url% -Dgradle.cache.remote.username=%gradle.cache.remote.username% -Dgradle.cache.remote.password=%gradle.cache.remote.password%" />
          <param name="ui.gradleRunner.gradle.build.file" value="" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_2" name="CHECK_CLEAN_M2" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[REPO=/home/%env.USER%/.m2/repository
if [ -e $REPO ] ; then
rm -rf $REPO
echo "$REPO was polluted during the build"
return 1
else
echo "$REPO does not exist"
fi]]></param>
          <param name="teamcity.step.mode" value="execute_always" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="Gradle_Branches_GradlePersonalBranches" />
    </vcs-settings>
    <requirements>
      <contains id="RQ_1" name="teamcity.agent.jvm.os.name" value="Linux" />
    </requirements>
    <build-triggers />
    <cleanup />
  </settings>
</build-type>

