// only the projects that contribute runtime code
ext.runtimeProjects = subprojects - [
    ':buildScanPerformance',
    ':docs',
    ':distributions',
    ':installationBeacon',
    ':internalAndroidPerformanceTesting',
    ':performance',
    ':runtimeApiInfo',
    ':smokeTest',
    ':soak'
].collect { project(it) }

def runtimeProjectTasks = { String taskName ->
    runtimeProjects.collect { it.tasks.findByPath(taskName) }.findAll { it != null }
}

ext.testGroupings = [
    "runtimeTests": "test",
    "runtimeIntegTests": "integTest",
    "runtimeForkingIntegTests": "forkingIntegTest",
    "runtimeNoDaemonIntegTests": "noDaemonIntegTest",
    "runtimeParallelIntegTests": "parallelIntegTest",
    "runtimeCrossVersionTests": "crossVersionTest",
    "runtimeForkingCrossVersionTests": "forkingCrossVersionTest"
]

testGroupings.each { grouping, testTask ->
    task "${grouping}" {
        dependsOn { runtimeProjectTasks(testTask) }
    }
}

