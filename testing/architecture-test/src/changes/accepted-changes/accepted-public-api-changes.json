{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyConstraintHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyConstraintHandler.addProvider(java.lang.String,org.gradle.api.provider.Provider)",
            "acceptation": "Not incubating as API is cloned from DependencyHandler",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyConstraintHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyConstraintHandler.addProvider(java.lang.String,org.gradle.api.provider.Provider,org.gradle.api.Action)",
            "acceptation": "Not incubating as API is cloned from DependencyHandler",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyConstraintHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyConstraintHandler.addProviderConvertible(java.lang.String,org.gradle.api.provider.ProviderConvertible)",
            "acceptation": "Not incubating as API is cloned from DependencyHandler",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyConstraintHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyConstraintHandler.addProviderConvertible(java.lang.String,org.gradle.api.provider.ProviderConvertible,org.gradle.api.Action)",
            "acceptation": "Not incubating as API is cloned from DependencyHandler",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.tooling.events.problems.ProblemDefinition",
            "member": "Method org.gradle.tooling.events.problems.ProblemDefinition.getDocumentationLink()",
            "acceptation": "Change in incubating API",
            "changes": [
                "From non-null returning to null returning breaking change"
            ]
        },
        {
            "type": "org.gradle.util.SingleMessageLogger",
            "member": "Class org.gradle.util.SingleMessageLogger",
            "acceptation": "Change in internal API",
            "changes": [
                "org.gradle.internal.deprecation.DeprecationLogger.init(org.gradle.api.logging.configuration.WarningMode,org.gradle.internal.operations.BuildOperationProgressEventEmitter,org.gradle.api.problems.Problems,org.gradle.problems.buildtree.ProblemStream)"
            ]
        }
    ]
}
