import org.gradle.api.internal.GradleInternal
import org.gradle.api.problems.Problems
import org.gradle.api.problems.Severity

def gradleInternal = gradle as GradleInternal
def problems = gradleInternal.services.get(Problems)

problems.forNamespace('buildscript').reporting {
    it.id('Deprecated script plugin') // TODO revisit recommendations here
        .contextualMessage("Deprecated script plugin 'demo-script-plugin'")
        .severity(Severity.WARNING)
        .solution("Please use 'standard-plugin-2' instead of this plugin")
}

tasks.register('warningTask') {
    doLast {
        problems.forNamespace('buildscript').reporting {
            it.id("Deprecated task")
                .contextualMessage("Task 'warningTask' is deprecated")
                .severity(Severity.WARNING)
                .solution("Please use 'warningTask2' instead of this task")
        }
    }
}

tasks.register('failingTask') {
    doLast {
        problems.forNamespace('buildscript').throwing {
            it.id("Task should not be called")
                .contextualMessage("Task 'failingTask' should not be called")
                .severity(Severity.ERROR)
                .withException(new RuntimeException("The 'failingTask' should not be called"))
                .solution("Please use 'successfulTask' instead of this task")
        }
    }
}
