{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.file.ProjectLayout",
            "member": "Class org.gradle.api.file.ProjectLayout",
            "acceptation": "Pulled up stable API into a new super interface",
            "changes": [
                "org.gradle.api.file.FileSystemLayout"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.plugins.quality.Checkstyle.getMaxErrors()",
            "acceptation": "Upgraded property",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.plugins.quality.Checkstyle.setMaxErrors(int)",
            "acceptation": "Upgraded property",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method org.gradle.api.tasks.bundling.War.getWebXml()",
            "acceptation": "War.webXml has been converted to lazy",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.bundling.War",
            "member": "Method org.gradle.api.tasks.bundling.War.setWebXml(java.io.File)",
            "acceptation": "War.webXml has been converted to lazy",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.getAnnotationProcessorPath()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.getEncoding()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.getExtensionDirs()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isDebug()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isDeprecation()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isFailOnError()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isIncremental()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isListFiles()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isVerbose()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isWarnings()",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setAnnotationProcessorPath(org.gradle.api.file.FileCollection)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setDebug(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setDeprecation(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setEncoding(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setExtensionDirs(java.lang.String)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setFailOnError(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setIncremental(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setListFiles(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setVerbose(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setWarnings(boolean)",
            "acceptation": "Property upgraded",
            "changes": [
                "Method has been removed"
            ]
        }
    ]
}
