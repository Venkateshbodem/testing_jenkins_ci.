{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Class org.gradle.api.plugins.quality.Checkstyle",
            "acceptation": "Checkstyle.maxErrors is upgraded to a Property type",
            "changes": [
                "Abstract method has been added to a superclass"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.plugins.quality.Checkstyle.getMaxErrors()",
            "acceptation": "Checkstyle.maxErrors is upgraded to a Property type",
            "changes": [
                "Method return type has changed",
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.Checkstyle",
            "member": "Method org.gradle.api.plugins.quality.Checkstyle.setMaxErrors(int)",
            "acceptation": "Checkstyle.maxErrors is upgraded to a Property type, setter is not needed anymore",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.getIncremental()",
            "acceptation": "CompileOptions.incremental is upgraded to a Property type",
            "changes": [
                "Method added to public class",
                "Abstract method has been added to this class"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.isIncremental()",
            "acceptation": "CompileOptions.incremental is upgraded to a Property type",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.CompileOptions",
            "member": "Method org.gradle.api.tasks.compile.CompileOptions.setIncremental(boolean)",
            "acceptation": "CompileOptions.incremental is upgraded to a Property type, setter is not needed anymore",
            "changes": [
                "Method has been removed"
            ]
        }
    ]
}
