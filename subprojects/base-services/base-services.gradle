/*
 * A set of generic services and utilities.
 *
 * Should have a very small set of dependencies, and should be appropriate to embed in an external
 * application (eg as part of the tooling API).
 */
apply plugin: 'java-library'

sourceCompatibility = javaVersion.java9Compatible ? 1.6 : 1.5

dependencies {
    api libraries.guava

    implementation libraries.slf4j_api
    implementation libraries.commons_lang
    implementation libraries.jcip
}

classpathManifest {
    additionalProjects = [project(':versionInfo')]
}

useTestFixtures()
useClassycle()

// TODO(daniel): Eric use this if you want to get a break point inside a worker process for debugging.
//      Simply invoke: gradle-built-from-source/bin/gradle :baseServices:clean :baseServices:compileJava
//      This compileJava generate LogEvent from the worker process so it's easy to debug.
//compileJava {
//    options.fork = true
//    options.forkOptions.jvmArgs = ["-Xdebug", "-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5013"]
//}
