{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.caching.configuration.BuildCacheConfiguration",
            "member": "Method org.gradle.caching.configuration.BuildCacheConfiguration.getLocal()",
            "acceptation": "Local cache configuration is always a DirectoryBuildCache now",
            "changes": []
        },
        {
            "type": "org.gradle.api.tasks.Delete",
            "member": "Method org.gradle.api.tasks.Delete.getClock()",
            "acceptation": "Injected service removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Delete",
            "member": "Method org.gradle.api.tasks.Delete.getFileResolver()",
            "acceptation": "Injected service removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.Delete",
            "member": "Method org.gradle.api.tasks.Delete.getFileSystem()",
            "acceptation": "Injected service removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.AbstractCopyTask",
            "member": "Method org.gradle.api.tasks.AbstractCopyTask.getFileSystem()",
            "acceptation": "Legacy type removed",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.SignOperation",
            "member": "Class org.gradle.plugins.signing.SignOperation",
            "acceptation": "Public type turned internal to forbid direct instantiation",
            "changes": [
                "Class is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.AbstractCompile",
            "member": "Method org.gradle.api.tasks.compile.AbstractCompile.compile()",
            "acceptation": "method shouldn't be used",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "member": "Class org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "acceptation": "The class is incubating and was simply moved",
            "changes": [
                "Interface has been added"
            ]
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "member": "Method org.gradle.language.nativeplatform.tasks.UnexportMainSymbol.getObjects()",
            "acceptation": "The class is incubating and was simply moved",
            "changes": []
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "member": "Method org.gradle.language.nativeplatform.tasks.UnexportMainSymbol.getOutputDirectory()",
            "acceptation": "The class is incubating and was simply moved",
            "changes": []
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "member": "Method org.gradle.language.nativeplatform.tasks.UnexportMainSymbol.getRelocatedObjects()",
            "acceptation": "The class is incubating and was simply moved",
            "changes": []
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "member": "Method org.gradle.language.nativeplatform.tasks.UnexportMainSymbol.unexport(org.gradle.work.InputChanges)",
            "acceptation": "The class is incubating and was simply moved",
            "changes": []
        },
        {
            "type": "org.gradle.language.nativeplatform.tasks.UnexportMainSymbol",
            "member": "Constructor org.gradle.language.nativeplatform.tasks.UnexportMainSymbol()",
            "acceptation": "The class is incubating and was simply move",
            "changes": []
        },
        {
            "type": "org.gradle.api.plugins.antlr.AntlrTask",
            "member": "Method org.gradle.api.plugins.antlr.AntlrTask.execute(org.gradle.api.tasks.incremental.IncrementalTaskInputs)",
            "acceptation": "Migrated to use InputChanges",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "member": "Class org.gradle.api.artifacts.repositories.IvyArtifactRepository",
            "acceptation": "Common methods extracted to UrlArtifactRepository",
            "changes": [
                "org.gradle.api.artifacts.repositories.UrlArtifactRepository"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "member": "Class org.gradle.api.artifacts.repositories.MavenArtifactRepository",
            "acceptation": "Common methods extracted to UrlArtifactRepository",
            "changes": [
                "org.gradle.api.artifacts.repositories.UrlArtifactRepository"
            ]
        },
        {
            "type": "org.gradle.api.tasks.TaskValidationException",
            "member": "Class org.gradle.api.tasks.TaskValidationException",
            "acceptation": "TaskValidationException is removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.TaskValidationException",
            "member": "Constructor org.gradle.api.tasks.TaskValidationException(java.lang.String,java.util.List)",
            "acceptation": "TaskValidationException is removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "member": "Class org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "acceptation": "ValidateTaskProperties is no longer a ConventionTask",
            "changes": [
                "org.gradle.api.internal.ConventionTask.conventionMapping(java.lang.String,groovy.lang.Closure)",
                "org.gradle.api.internal.ConventionTask.conventionMapping(java.lang.String,java.util.concurrent.Callable)",
                "org.gradle.api.internal.ConventionTask.getConventionMapping()"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt",
            "member": "Class org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt",
            "acceptation": "Reified versions of methods that are already de-incubated",
            "changes": []
        },
        {
            "type": "org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt.all(org.gradle.api.artifacts.dsl.ComponentMetadataHandler)",
            "acceptation": "Reified versions of methods that are already de-incubated",
            "changes": []
        },
        {
            "type": "org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt.all(org.gradle.api.artifacts.dsl.ComponentMetadataHandler,org.gradle.api.Action)",
            "acceptation": "Reified versions of methods that are already de-incubated",
            "changes": []
        },
        {
            "type": "org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt.withModule(org.gradle.api.artifacts.dsl.ComponentMetadataHandler,java.lang.Object)",
            "acceptation": "Reified versions of methods that are already de-incubated",
            "changes": []
        },
        {
            "type": "org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.ComponentMetadataHandlerExtensionsKt.withModule(org.gradle.api.artifacts.dsl.ComponentMetadataHandler,java.lang.Object,org.gradle.api.Action)",
            "acceptation": "Reified versions of methods that are already de-incubated",
            "changes": []
        },
        {
            "type": "org.gradle.api.reflect.TypeOf",
            "member": "Method org.gradle.api.reflect.TypeOf.getLowerBound()",
            "acceptation": "It goes with the already public API, getUpperBound",
            "changes": []
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.doUseEmptySettings()",
            "acceptation": "Method added to work around the deprecation of useEmptySettings(). Users are not intended to extend the StartParameter class.",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.ComponentMetadataDetails",
            "member": "Method org.gradle.api.artifacts.ComponentMetadataDetails.addVariant(java.lang.String,org.gradle.api.Action)",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.ComponentMetadataDetails",
            "member": "Method org.gradle.api.artifacts.ComponentMetadataDetails.addVariant(java.lang.String,java.lang.String,org.gradle.api.Action)",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.artifacts.MutableVariantFilesMetadata",
            "member": "Class org.gradle.api.artifacts.MutableVariantFilesMetadata",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.MutableVariantFilesMetadata",
            "member": "Method org.gradle.api.artifacts.MutableVariantFilesMetadata.addFile(java.lang.String)",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.MutableVariantFilesMetadata",
            "member": "Method org.gradle.api.artifacts.MutableVariantFilesMetadata.addFile(java.lang.String,java.lang.String)",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.MutableVariantFilesMetadata",
            "member": "Method org.gradle.api.artifacts.MutableVariantFilesMetadata.removeAllFiles()",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.VariantFileMetadata",
            "member": "Class org.gradle.api.artifacts.VariantFileMetadata",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.VariantFileMetadata",
            "member": "Method org.gradle.api.artifacts.VariantFileMetadata.getName()",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.artifacts.VariantFileMetadata",
            "member": "Method org.gradle.api.artifacts.VariantFileMetadata.getUrl()",
            "acceptation": "Method added to complete component metadata rules functionality that is de-incubated in 6.0",
            "changes": []
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method org.gradle.api.publish.ivy.IvyPublication.suppressAllIvyMetadataWarnings()",
            "acceptation": "Method added to complete GMM publishing functionality that is the default in 6.0",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.publish.ivy.IvyPublication",
            "member": "Method org.gradle.api.publish.ivy.IvyPublication.suppressIvyMetadataWarningsFor(java.lang.String)",
            "acceptation": "Method added to complete GMM publishing functionality that is the default in 6.0",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method org.gradle.api.publish.maven.MavenPublication.suppressAllPomMetadataWarnings()",
            "acceptation": "Method added to complete GMM publishing functionality that is the default in 6.0",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.MavenPublication",
            "member": "Method org.gradle.api.publish.maven.MavenPublication.suppressPomMetadataWarningsFor(java.lang.String)",
            "acceptation": "Method added to complete GMM publishing functionality that is the default in 6.0",
            "changes": [
                "Method added to interface"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getDistsDirectory()",
            "acceptation": "This replaces getDistsDir",
            "changes": [
                "Abstract method has been added to this class"
            ]
        },
        {
            "type": "org.gradle.api.plugins.BasePluginConvention",
            "member": "Method org.gradle.api.plugins.BasePluginConvention.getLibsDirectory()",
            "acceptation": "This replaces getLibsDir",
            "changes": [
                "Abstract method has been added to this class"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.newInputDirectory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.newInputFile()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.newOutputDirectory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.DefaultTask",
            "member": "Method org.gradle.api.DefaultTask.newOutputFile()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.dsl.ConventionProperty",
            "member": "Class org.gradle.api.dsl.ConventionProperty",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.dsl.ConventionProperty",
            "member": "Constructor org.gradle.api.dsl.ConventionProperty()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.Nullable",
            "member": "Class org.gradle.api.Nullable",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.ExtensionContainer",
            "member": "Method org.gradle.api.plugins.ExtensionContainer.getSchema()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.CompatibilityAdapterForTaskInputs",
            "member": "Class org.gradle.api.tasks.CompatibilityAdapterForTaskInputs",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.CompatibilityAdapterForTaskInputs",
            "member": "Method org.gradle.api.tasks.CompatibilityAdapterForTaskInputs.property(java.lang.String,java.lang.Object)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.isInteractive()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.isRecompileScripts()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.setInteractive(boolean)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.StartParameter",
            "member": "Method org.gradle.StartParameter.setRecompileScripts(boolean)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testfixtures.ProjectBuilder",
            "member": "Constructor org.gradle.testfixtures.ProjectBuilder()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor is less accessible"
            ]
        },
        {
            "type": "org.gradle.api.tasks.SourceSetOutput",
            "member": "Method org.gradle.api.tasks.SourceSetOutput.isLegacyLayout()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getEffectiveAnnotationProcessorPath()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.tasks.compile.JavaCompile",
            "member": "Method org.gradle.api.tasks.compile.JavaCompile.getSources()",
            "acceptation": "Deprecated member removed",
            "changes": []
        },
        {
            "type": "org.gradle.caching.configuration.BuildCacheConfiguration",
            "member": "Method org.gradle.caching.configuration.BuildCacheConfiguration.local(java.lang.Class)",
            "acceptation": "Local cache configuration is always a DirectoryBuildCache now",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.caching.configuration.BuildCacheConfiguration",
            "member": "Method org.gradle.caching.configuration.BuildCacheConfiguration.local(java.lang.Class,org.gradle.api.Action)",
            "acceptation": "Local cache configuration is always a DirectoryBuildCache now",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.BuildCacheConfigurationExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.BuildCacheConfigurationExtensionsKt.local(org.gradle.caching.configuration.BuildCacheConfiguration)",
            "acceptation": "Local cache configuration is always a DirectoryBuildCache now",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.BuildCacheConfigurationExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.BuildCacheConfigurationExtensionsKt.local(org.gradle.caching.configuration.BuildCacheConfiguration,kotlin.jvm.functions.Function1)",
            "acceptation": "Local cache configuration is always a DirectoryBuildCache now",
            "changes": [
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "member": "Method org.gradle.plugin.devel.tasks.ValidateTaskProperties.getClassLoaderFactory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "member": "Method org.gradle.plugin.devel.tasks.ValidateTaskProperties.getDocumentationRegistry()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "member": "Method org.gradle.plugin.devel.tasks.ValidateTaskProperties.setClasses(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "member": "Method org.gradle.plugin.devel.tasks.ValidateTaskProperties.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugin.devel.tasks.ValidateTaskProperties",
            "member": "Method org.gradle.plugin.devel.tasks.ValidateTaskProperties.validateTaskClasses()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.language.scala.tasks.AbstractScalaCompile",
            "member": "Method org.gradle.language.scala.tasks.AbstractScalaCompile.getEffectiveAnnotationProcessorPath()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.publish.maven.tasks.AbstractPublishToMaven",
            "member": "Method org.gradle.api.publish.maven.tasks.AbstractPublishToMaven.getLoggingManagerFactory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method org.gradle.plugins.signing.Sign.getInputFiles()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.plugins.signing.Sign",
            "member": "Method org.gradle.plugins.signing.Sign.getOutputFiles()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension.isAppend()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoTaskExtension",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoTaskExtension.setAppend(boolean)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.setAdditionalClassDirs(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.setAdditionalSourceDirs(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.setClassDirectories(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.setExecutionData(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.tasks.JacocoReportBase",
            "member": "Method org.gradle.testing.jacoco.tasks.JacocoReportBase.setSourceDirectories(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.testing.jacoco.plugins.JacocoPlugin",
            "member": "Method org.gradle.testing.jacoco.plugins.JacocoPlugin.configureDefaultOutputPathForJacocoMerge()",
            "acceptation": "Deprecated member made private",
            "changes": [
                "Method is less accessible",
                "Method return type has changed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Class org.gradle.api.plugins.quality.JDependPlugin",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Field DEFAULT_JDEPEND_VERSION",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.beforeApply()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.configureConfiguration(org.gradle.api.artifacts.Configuration)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.configureForSourceSet(org.gradle.api.tasks.SourceSet,org.gradle.api.plugins.quality.JDepend)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.configureForSourceSet(org.gradle.api.tasks.SourceSet,java.lang.Object)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.configureTaskDefaults(org.gradle.api.plugins.quality.JDepend,java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.configureTaskDefaults(java.lang.Object,java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.createExtension()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.getTaskType()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Method org.gradle.api.plugins.quality.JDependPlugin.getToolName()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependPlugin",
            "member": "Constructor org.gradle.api.plugins.quality.JDependPlugin()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependExtension",
            "member": "Class org.gradle.api.plugins.quality.JDependExtension",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependExtension",
            "member": "Constructor org.gradle.api.plugins.quality.JDependExtension()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Class org.gradle.api.plugins.quality.JDepend",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.getAntBuilder()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.getClassesDirs()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.getJdependClasspath()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.getObjectFactory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.getReports()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.reports(groovy.lang.Closure)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.reports(org.gradle.api.Action)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.run()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.setClassesDirs(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Method org.gradle.api.plugins.quality.JDepend.setJdependClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDepend",
            "member": "Constructor org.gradle.api.plugins.quality.JDepend()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependReports",
            "member": "Class org.gradle.api.plugins.quality.JDependReports",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependReports",
            "member": "Method org.gradle.api.plugins.quality.JDependReports.getText()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.JDependReports",
            "member": "Method org.gradle.api.plugins.quality.JDependReports.getXml()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Class org.gradle.api.plugins.quality.FindBugsPlugin",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Field DEFAULT_FINDBUGS_VERSION",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Field has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.beforeApply()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.configureConfiguration(org.gradle.api.artifacts.Configuration)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.configureForSourceSet(org.gradle.api.tasks.SourceSet,org.gradle.api.plugins.quality.FindBugs)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.configureForSourceSet(org.gradle.api.tasks.SourceSet,java.lang.Object)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.configureTaskDefaults(org.gradle.api.plugins.quality.FindBugs,java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.configureTaskDefaults(java.lang.Object,java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.createExtension()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.getTaskType()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Method org.gradle.api.plugins.quality.FindBugsPlugin.getToolName()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsPlugin",
            "member": "Constructor org.gradle.api.plugins.quality.FindBugsPlugin()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Class org.gradle.api.plugins.quality.FindBugsExtension",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getEffort()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getExcludeBugsFilter()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getExcludeBugsFilterConfig()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getExcludeFilter()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getExcludeFilterConfig()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getExtraArgs()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getIncludeFilter()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getIncludeFilterConfig()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getOmitVisitors()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getReportLevel()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.getVisitors()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setEffort(java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setExcludeBugsFilter(java.io.File)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setExcludeBugsFilterConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setExcludeFilter(java.io.File)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setExcludeFilterConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setExtraArgs(java.util.Collection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setIncludeFilter(java.io.File)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setIncludeFilterConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setOmitVisitors(java.util.Collection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setReportLevel(java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Method org.gradle.api.plugins.quality.FindBugsExtension.setVisitors(java.util.Collection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsExtension",
            "member": "Constructor org.gradle.api.plugins.quality.FindBugsExtension(org.gradle.api.Project)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Class org.gradle.api.plugins.quality.FindBugs",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.extraArgs(java.lang.Iterable)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.extraArgs(java.lang.String[])",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getCandidateClassFiles()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getClasses()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getClasspath()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getEffort()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getExcludeBugsFilter()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getExcludeBugsFilterConfig()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getExcludeFilter()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getExcludeFilterConfig()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getExtraArgs()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getFindbugsClasspath()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getIncludeFilter()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getIncludeFilterConfig()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getMaxHeapSize()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getObjectFactory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getOmitVisitors()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getPluginClasspath()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getReportLevel()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getReports()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getShowProgress()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getSource()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getVisitors()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.getWorkerProcessBuilderFactory()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.reports(groovy.lang.Closure)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.reports(org.gradle.api.Action)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.run()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setClasses(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setEffort(java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setExcludeBugsFilter(java.io.File)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setExcludeBugsFilterConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setExcludeFilter(java.io.File)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setExcludeFilterConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setExtraArgs(java.util.Collection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setFindbugsClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setIncludeFilter(java.io.File)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setIncludeFilterConfig(org.gradle.api.resources.TextResource)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setMaxHeapSize(java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setOmitVisitors(java.util.Collection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setPluginClasspath(org.gradle.api.file.FileCollection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setReportLevel(java.lang.String)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setShowProgress(boolean)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Method org.gradle.api.plugins.quality.FindBugs.setVisitors(java.util.Collection)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugs",
            "member": "Constructor org.gradle.api.plugins.quality.FindBugs()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Constructor has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsReports",
            "member": "Class org.gradle.api.plugins.quality.FindBugsReports",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsReports",
            "member": "Method org.gradle.api.plugins.quality.FindBugsReports.getEmacs()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsReports",
            "member": "Method org.gradle.api.plugins.quality.FindBugsReports.getHtml()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsReports",
            "member": "Method org.gradle.api.plugins.quality.FindBugsReports.getText()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsReports",
            "member": "Method org.gradle.api.plugins.quality.FindBugsReports.getXml()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsXmlReport",
            "member": "Class org.gradle.api.plugins.quality.FindBugsXmlReport",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsXmlReport",
            "member": "Method org.gradle.api.plugins.quality.FindBugsXmlReport.isWithMessages()",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.api.plugins.quality.FindBugsXmlReport",
            "member": "Method org.gradle.api.plugins.quality.FindBugsXmlReport.setWithMessages(boolean)",
            "acceptation": "Deprecated member removed",
            "changes": [
                "Method has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.KotlinScriptTemplate",
            "member": "Class org.gradle.kotlin.dsl.KotlinScriptTemplate",
            "acceptation": "Annotation is no longer required",
            "changes": [
                "Class has been removed"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt",
            "member": "Method org.gradle.kotlin.dsl.PluginDependenciesSpecExtensionsKt.build-scan$annotations(org.gradle.plugin.use.PluginDependenciesSpec)",
            "acceptation": "Kotlin goop that no one actually uses",
            "changes": []
        }
    ]
}
